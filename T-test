def testing_hypothesis(null_hypothesis,sample_mean,sample_std,sample_size,pop_std):
    ''' this function is used to test null hypothesis, it takes in all the details and clasifies whether t-taest or z-test 
        should be used and then applies formula and returns end result.'''
     
## Here we first test whether given problem is of t or z.## 
    
    ## If question is of t-test.##    
    if pop_std == 0 and sample_size <= 40:
        print("This is the problem of t-test")
        cal_t_value = (sample_mean-null_hypothesis)/(sample_std/(sample_size**0.5))
        significance_level = input("at what significance you want to test this .1,.05,.025,.01,.005? ")
        significance_level += ""
        df = (sample_size - 1)  
             
        ## Here we will check whether given question is of one tail or two tail.##
        tail = input("please select whether it is onetail or twotail. ")
        
        ## If this problem is of one tail test.##
        
        if tail == 'onetail':
            table_value = t_test_table_value_one_tail(df,significance_level)
            ## if left tail test##
            if cal_t_value<=0:
                table_value = -table_value
                if cal_t_value>= -table_value:
                    ans = print("null hypothesis is not rejected")
                    return ans, cal_t_value, table_value
                
                else:
                    ans = print("null hypothesis is rejected")
                    return ans, cal_t_value, table_value
            #if right tail test##
            else:
                if cal_t_value<=table_value:
                    ans = print("null hypothesis is not rejected")
                    return ans, cal_t_value, table_value
                
                else:
                    ans = print("null hypothesis is rejected")
                    return ans, cal_t_value, table_value
            
               
            
        ## If this problem is of two tail test.##         
        if tail == 'twotail':
            table_value = t_test_tabe_value_two_tail(df,significance_level)
            if cal_t_value<=0:
                table_value = -table_value
               
                if -table_value <= cal_t_value <= table_value:
                    ans = print("null hypothesis is not rejected")
                    return ans, cal_t_value, table_value
                 
                else:
                    ans = print("null hypothesis is rejected")
                    return ans, cal_t_value,table_value
            else:
                if -table_value<=cal_t_value or cal_t_value<=table_value:
                    ans = print("null hypothesis is not rejected")
                    return ans, cal_t_value, table_value
                
                else:
                    ans = print("null hypothesis is rejected")
                    return ans, cal_t_value, table_value
              
        ## If question is of z-test.##                    
        else:
            print ("This function does not full fills requirement of t-test")



#these are t tables that function would use. I used data frame to make this.
import pandas as pd

def t_test_table_value_one_tail(df,significance_level):
    data =[[1,3.078, 6.314, 12.706, 31.821, 63.657], [2,1.886,2.920, 4.303, 6.965, 9.925],[3,   1.638, 2.353 ,3.182, 4.541, 5.841],[4,   1.533, 2.132 ,2.776, 3.747 ,4.604],[5,   1.476 ,2.015 ,2.571, 3.365 ,4.032],[6,   1.440, 1.943, 2.447 ,3.143, 3.707],[7,   1.415, 1.895, 2.365, 2.998, 3.499],[8   ,1.397, 1.860, 2.306 ,2.896, 3.355],[9   ,1.383, 1.833 ,2.262, 2.821 ,3.250],[10  ,1.372, 1.812, 2.228, 2.764, 3.169],[11  ,1.363 ,1.796 ,2.201 ,2.718 ,3.106],[12  ,1.356 ,1.782 ,2.179 ,2.681 ,3.055],[13,  1.350, 1.771, 2.160, 2.650, 3.012],[14 , 1.345 ,1.761, 2.145 ,2.624, 2.977],[15,  1.341, 1.753, 2.131 ,2.602 ,2.947],[16 , 1.337, 1.746, 2.120 ,2.583 ,2.921],[17  ,1.333, 1.740, 2.110 ,2.567, 2.898],[18,  1.330, 1.734, 2.101, 2.552, 2.878],[19  ,1.328, 1.729, 2.093 ,2.539 ,2.861],[20,  1.325 ,1.725 ,2.086 ,2.528 ,2.845],[21  ,1.323 ,1.721 ,2.080 ,2.518 ,2.831],[22  ,1.321 ,1.717 ,2.074 ,2.508 ,2.819],[23,  1.319 ,1.714 ,2.069 ,2.500 ,2.807],[24,  1.318 ,1.711, 2.064 ,2.492 ,2.797],[25 , 1.316 ,1.708 ,2.060 ,2.485, 2.787],[26  ,1.315, 1.706 ,2.056 ,2.479, 2.779],[27  ,1.314 ,1.703 ,2.052, 2.473 ,2.771],[28 , 1.313, 1.701, 2.048 ,2.467, 2.763],[29,  1.311, 1.699, 2.045, 2.462, 2.756],[30,  1.310, 1.697, 2.042 ,2.457 ,2.750],[32  ,1.309, 1.694, 2.037 ,2.449, 2.738],[34  ,1.307 , 1.691 ,2.032 ,2.441 ,2.728],[36,  1.306, 1.688, 2.028, 2.434, 2.719],[38,  1.304, 1.686 ,2.024, 2.429,2.712]]
    table1 = pd.DataFrame(data,columns=['df','.1','.05','.025','.01','.005']).set_index("df", drop = True)
    return table1.loc[df,significance_level]


def t_test_tabe_value_two_tail(df,significance_level):
    data2 =[[2, 1.89, 2.92, 4.30, 9.92, 14.09, 31.60, 44.70, 100.14],[3 ,1.64 ,2.35, 3.18 ,5.84, 7.45,12.92, 16.33 ,28.01],[4 ,1.53 ,2.13 ,2.78 ,4.60, 5.60 ,8.61, 10.31 ,15.53],[5, 1.48 ,2.02 ,2.57 ,4.03 ,4.77, 6.87 ,7.98, 11.18],[6 ,1.44 ,1.94, 2.45 ,3.71 ,4.32, 5.96 ,6.79 ,9.08],[7 ,1.41 ,1.89 ,2.36 ,3.50 ,4.03 ,5.41 ,6.08, 7.89],[8, 1.40, 1.86 ,2.31, 3.36, 3.83 ,5.04 ,5.62 ,7.12],[9, 1.38, 1.83 ,2.26 ,3.25 ,3.69, 4.78 ,5.29, 6.59],[10, 1.37 ,1.81 ,2.23 ,3.17 ,3.58 ,4.59 ,5.05, 6.21],[11 ,1.36 ,1.80 ,2.20 ,3.11, 3.50 ,4.44 ,4.86, 5.92],[12, 1.36, 1.78, 2.18, 3.05, 3.43 ,4.32, 4.72, 5.70],[13, 1.35 ,1.77, 2.16 ,3.01, 3.37, 4.22 ,4.60, 5.51],[14, 1.35, 1.76 ,2.14 ,2.98, 3.33 ,4.14, 4.50, 5.36],[15 ,1.34, 1.75 ,2.13, 2.95, 3.29, 4.07, 4.42, 5.24],[16 ,1.34 ,1.75, 2.12 ,2.92 ,3.25 ,4.01 ,4.35 ,5.13],[17, 1.33, 1.74, 2.11 ,2.90 ,3.22 ,3.97, 4.29 ,5.04],[18 ,1.33 ,1.73 ,2.10, 2.88, 3.20, 3.92, 4.23, 4.97],[19 ,1.33, 1.73, 2.09, 2.86,3.17 ,3.88 ,4.19, 4.90],[20, 1.33, 1.72, 2.09, 2.85, 3.15, 3.85 ,4.15, 4.84],[21 ,1.32, 1.72 ,2.08, 2.83, 3.14, 3.82, 4.11, 4.78],[22, 1.32 ,1.72 ,2.07 ,2.82 ,3.12, 3.79 ,4.08, 4.74],[23 ,1.32,1.71, 2.07 ,2.81, 3.10, 3.77, 4.05, 4.69],[24, 1.32, 1.71, 2.06 ,2.80 ,3.09 ,3.75, 4.02 ,4.65],[25 ,1.32 ,1.71, 2.06 ,2.79 ,3.08, 3.73, 4.00, 4.62],[26, 1.31 ,1.71 ,2.06 ,2.78, 3.07 ,3.71 ,3.97 ,4.59],[27, 1.31, 1.70, 2.05 ,2.77 ,3.06 ,3.69, 3.95, 4.56],[28, 1.31 ,1.70 ,2.05 ,2.76 ,3.05 ,3.67 ,3.93,4.53],[29, 1.31,1.70 ,2.05, 2.76,3.04, 3.66 ,3.92 ,4.51],[30 ,1.31, 1.70, 2.04 ,2.75 ,3.03 ,3.65 ,3.90 ,4.48]]
    table2 = pd.DataFrame(data2,columns=["df",".2",'.1','.05','.01','.005','.001','.0005','.0001']).set_index("df", drop = True)
    return table2.loc[df,significance_level] 
